<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
  "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">


<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    
    <title>Building Container Images &mdash; kolla 4.0.0.0b4.dev66 documentation</title>
    
    <link rel="stylesheet" href="_static/nature.css" type="text/css" />
    <link rel="stylesheet" href="_static/pygments.css" type="text/css" />
    <link rel="stylesheet" href="_static/tweaks.css" type="text/css" />
    
    <script type="text/javascript">
      var DOCUMENTATION_OPTIONS = {
        URL_ROOT:    './',
        VERSION:     '4.0.0.0b4.dev66',
        COLLAPSE_INDEX: false,
        FILE_SUFFIX: '.html',
        HAS_SOURCE:  true
      };
    </script>
    <script type="text/javascript" src="_static/jquery.js"></script>
    <script type="text/javascript" src="_static/underscore.js"></script>
    <script type="text/javascript" src="_static/doctools.js"></script>
    <link rel="top" title="kolla 4.0.0.0b4.dev66 documentation" href="index.html" />
    <link rel="next" title="How To Contribute" href="CONTRIBUTING.html" />
    <link rel="prev" title="Welcome to Kolla’s documentation!" href="index.html" /> 
  </head>
  <body role="document">
  <div id="header">
    <h1 id="logo"><a href="http://www.openstack.org/">OpenStack</a></h1>
    <ul id="navigation">
      
      <li><a href="http://www.openstack.org/" title="Go to the Home page" class="link">Home</a></li>
      <li><a href="http://www.openstack.org/projects/" title="Go to the OpenStack Projects page">Projects</a></li>
      <li><a href="http://www.openstack.org/user-stories/" title="Go to the User Stories page" class="link">User Stories</a></li>
      <li><a href="http://www.openstack.org/community/" title="Go to the Community page" class="link">Community</a></li>
      <li><a href="http://www.openstack.org/blog/" title="Go to the OpenStack Blog">Blog</a></li>
      <li><a href="http://wiki.openstack.org/" title="Go to the OpenStack Wiki">Wiki</a></li>
      <li><a href="http://docs.openstack.org/" title="Go to OpenStack Documentation" class="current">Documentation</a></li>
      
    </ul>
  </div>
  

    <div class="document">
      <div class="documentwrapper">
        <div class="bodywrapper">
          <div class="body" role="main">
            
  <div class="section" id="building-container-images">
<span id="image-building"></span><h1>Building Container Images<a class="headerlink" href="#building-container-images" title="Permalink to this headline">¶</a></h1>
<p>The <code class="docutils literal"><span class="pre">kolla-build</span></code> command is responsible for building Docker images.</p>
<div class="admonition note">
<p class="first admonition-title">Note</p>
<p class="last">When developing Kolla it can be useful to build images using files located in
a local copy of Kolla. Use the <code class="docutils literal"><span class="pre">tools/build.py</span></code> script instead of
<code class="docutils literal"><span class="pre">kolla-build</span></code> command in all below instructions.</p>
</div>
<div class="section" id="generating-kolla-build-conf">
<h2>Generating kolla-build.conf<a class="headerlink" href="#generating-kolla-build-conf" title="Permalink to this headline">¶</a></h2>
<p>Install tox and generate the build configuration. The build configuration is
designed to hold advanced customizations when building containers.</p>
<p>Create kolla-build.conf using the following steps.</p>
<div class="highlight-python"><div class="highlight"><pre><span></span>pip install tox
tox -e genconfig
</pre></div>
</div>
<p>The location of the generated configuration file is
<code class="docutils literal"><span class="pre">etc/kolla/kolla-build.conf</span></code>, it can also be copied to <code class="docutils literal"><span class="pre">/etc/kolla</span></code>. The
default location is one of <code class="docutils literal"><span class="pre">/etc/kolla/kolla-build.conf</span></code> or
<code class="docutils literal"><span class="pre">etc/kolla/kolla-build.conf</span></code>.</p>
</div>
<div class="section" id="guide">
<h2>Guide<a class="headerlink" href="#guide" title="Permalink to this headline">¶</a></h2>
<p>In general, images are built like this:</p>
<div class="highlight-python"><div class="highlight"><pre><span></span><span class="n">kolla</span><span class="o">-</span><span class="n">build</span>
</pre></div>
</div>
<p>By default, the above command would build all images based on CentOS image.</p>
<p>The operator can change the base distro with the <code class="docutils literal"><span class="pre">-b</span></code> option:</p>
<div class="highlight-python"><div class="highlight"><pre><span></span>kolla-build -b ubuntu
</pre></div>
</div>
<p>There are following distros available for building images:</p>
<ul class="simple">
<li>centos</li>
<li>oraclelinux</li>
<li>ubuntu</li>
</ul>
<div class="admonition warning">
<p class="first admonition-title">Warning</p>
<p class="last">Fedora images are deprecated since Newton and will be removed
in the future.</p>
</div>
<p>It is possible to build only a subset of images by specifying them on the
command line:</p>
<div class="highlight-python"><div class="highlight"><pre><span></span>kolla-build keystone
</pre></div>
</div>
<p>In this case, the build script builds all images which name contains the
<code class="docutils literal"><span class="pre">keystone</span></code> string along with their dependencies.</p>
<p>Multiple names may be specified on the command line:</p>
<div class="highlight-python"><div class="highlight"><pre><span></span>kolla-build keystone nova
</pre></div>
</div>
<p>The set of images built can be defined as a profile in the <code class="docutils literal"><span class="pre">profiles</span></code> section
of <code class="docutils literal"><span class="pre">kolla-build.conf</span></code>. Later, profile can be specified by <code class="docutils literal"><span class="pre">--profile</span></code> CLI
argument or <code class="docutils literal"><span class="pre">profile</span></code> option in <code class="docutils literal"><span class="pre">kolla-build.conf</span></code>. Kolla provides some
pre-defined profiles:</p>
<ul class="simple">
<li><code class="docutils literal"><span class="pre">infra</span></code> infrastructure-related images</li>
<li><code class="docutils literal"><span class="pre">main</span></code> core OpenStack images</li>
<li><code class="docutils literal"><span class="pre">aux</span></code> auxiliary images such as trove, magnum, ironic</li>
<li><code class="docutils literal"><span class="pre">default</span></code> minimal set of images for a working deploy</li>
</ul>
<p>For example, due to Magnum requires Heat, following profile can be add to
<code class="docutils literal"><span class="pre">profiles</span></code> section in <code class="docutils literal"><span class="pre">kolla-build.conf</span></code></p>
<div class="highlight-python"><div class="highlight"><pre><span></span><span class="n">magnum</span> <span class="o">=</span> <span class="n">magnum</span><span class="p">,</span><span class="n">heat</span>
</pre></div>
</div>
<p>These images can be built using command line</p>
<div class="highlight-python"><div class="highlight"><pre><span></span>kolla-build --profile magnum
</pre></div>
</div>
<p>Or put following line to <code class="docutils literal"><span class="pre">DEFAULT</span></code> section in <code class="docutils literal"><span class="pre">kolla-build.conf</span></code></p>
<div class="highlight-python"><div class="highlight"><pre><span></span><span class="n">profile</span> <span class="o">=</span> <span class="n">magnum</span>
</pre></div>
</div>
<p><code class="docutils literal"><span class="pre">kolla-build</span></code> uses <code class="docutils literal"><span class="pre">kolla</span></code> as default Docker namespace. This is
controlled with the <code class="docutils literal"><span class="pre">-n</span></code> command line option. To push images to a Dockerhub
repository named <code class="docutils literal"><span class="pre">mykollarepo</span></code>:</p>
<div class="highlight-python"><div class="highlight"><pre><span></span>kolla-build -n mykollarepo --push
</pre></div>
</div>
<p>To push images to a <span class="xref std std-ref">local registry</span>, use
<code class="docutils literal"><span class="pre">--registry</span></code> flag:</p>
<div class="highlight-python"><div class="highlight"><pre><span></span>kolla-build --registry 172.22.2.81:5000 --push
</pre></div>
</div>
<p>The build configuration can be customized using a config file, the default
location being one of <code class="docutils literal"><span class="pre">/etc/kolla/kolla-build.conf</span></code> or
<code class="docutils literal"><span class="pre">etc/kolla/kolla-build.conf</span></code>. This file can be generated using the following
command:</p>
<div class="highlight-python"><div class="highlight"><pre><span></span>tox -e genconfig
</pre></div>
</div>
</div>
<div class="section" id="build-openstack-from-source">
<h2>Build OpenStack from source<a class="headerlink" href="#build-openstack-from-source" title="Permalink to this headline">¶</a></h2>
<p>When building images, there are two methods of the OpenStack install. One is
<code class="docutils literal"><span class="pre">binary</span></code>. Another is <code class="docutils literal"><span class="pre">source</span></code>. The <code class="docutils literal"><span class="pre">binary</span></code> means that OpenStack will be
installed from apt/yum. And the <code class="docutils literal"><span class="pre">source</span></code> means that OpenStack will be
installed from source code. The default method of the OpenStack install is
<code class="docutils literal"><span class="pre">binary</span></code>. It can be changed to <code class="docutils literal"><span class="pre">source</span></code> using the <code class="docutils literal"><span class="pre">-t</span></code> option:</p>
<div class="highlight-python"><div class="highlight"><pre><span></span>kolla-build -t source
</pre></div>
</div>
<p>The locations of OpenStack source code are written in
<code class="docutils literal"><span class="pre">etc/kolla/kolla-build.conf</span></code>.
Now the source type supports <code class="docutils literal"><span class="pre">url</span></code>, <code class="docutils literal"><span class="pre">git</span></code>, and <code class="docutils literal"><span class="pre">local</span></code>. The location of
the <code class="docutils literal"><span class="pre">local</span></code> source type can point to either a directory containing the source
code or to a tarball of the source. The <code class="docutils literal"><span class="pre">local</span></code> source type permits to make
the best use of the Docker cache.</p>
<p><code class="docutils literal"><span class="pre">etc/kolla/kolla-build.conf</span></code> looks like:</p>
<div class="highlight-python"><div class="highlight"><pre><span></span>[glance-base]
type = url
location = http://tarballs.openstack.org/glance/glance-master.tar.gz

[keystone]
type = git
location = https://git.openstack.org/openstack/keystone
reference = stable/mitaka

[heat-base]
type = local
location = /home/kolla/src/heat

[ironic-base]
type = local
location = /tmp/ironic.tar.gz
</pre></div>
</div>
<p>To build RHEL containers, it is necessary to include registration with RHN
of the container runtime operating system.  To obtain a RHN
username/password/pool id, contact Red Hat.  Use a template&#8217;s header block
overrides file, add the following:</p>
<div class="highlight-python"><div class="highlight"><pre><span></span>RUN subscription-manager register --user=&lt;user-name&gt; \
--password=&lt;password&gt; &amp;&amp; subscription-manager attach --pool &lt;pool-id&gt;
</pre></div>
</div>
</div>
<div class="section" id="dockerfile-customisation">
<h2>Dockerfile Customisation<a class="headerlink" href="#dockerfile-customisation" title="Permalink to this headline">¶</a></h2>
<p>As of the Newton release, the <code class="docutils literal"><span class="pre">kolla-build</span></code> tool provides a Jinja2 based
mechanism which allows operators to customise the Dockerfiles used to generate
Kolla images.</p>
<p>This offers a lot of flexibility on how images are built, e.g. installing extra
packages as part of the build, tweaking settings, installing plugins, and
numerous other capabilities. Some of these examples are described in more
detail below.</p>
<div class="section" id="generic-customisation">
<h3>Generic Customisation<a class="headerlink" href="#generic-customisation" title="Permalink to this headline">¶</a></h3>
<p>Anywhere the line <code class="docutils literal"><span class="pre">{%</span> <span class="pre">block</span> <span class="pre">...</span> <span class="pre">%}</span></code> appears may be modified. The Kolla
community have added blocks throughout the Dockerfiles where we think they will
be useful, however, operators are free to submit more if the ones provided are
inadequate.</p>
<p>The following is an example of how an operator would modify the setup steps
within the Horizon Dockerfile.</p>
<p>First, create a file to contain the customisations, e.g.
<code class="docutils literal"><span class="pre">template-overrides.j2</span></code>. In this place the following:</p>
<div class="highlight-python"><div class="highlight"><pre><span></span>{% extends parent_template %}

# Horizon
{% block horizon_redhat_binary_setup %}
RUN useradd --user-group myuser
{% endblock %}
</pre></div>
</div>
<p>Then rebuild the horizon image, passing the <code class="docutils literal"><span class="pre">--template-override</span></code> argument:</p>
<div class="highlight-python"><div class="highlight"><pre><span></span>kolla-build --template-override template-overrides.j2 horizon
</pre></div>
</div>
<div class="admonition note">
<p class="first admonition-title">Note</p>
<p>The above example will replace all contents from the original block. Hence
in many cases one may want to copy the original contents of the block before
making changes.</p>
<p class="last">More specific functionality such as removing/appending entries is available
for packages, described in the next section.</p>
</div>
</div>
<div class="section" id="package-customisation">
<h3>Package Customisation<a class="headerlink" href="#package-customisation" title="Permalink to this headline">¶</a></h3>
<p>Packages installed as part of a container build can be overridden, appended to,
and deleted. Taking the Horizon example, the following packages are installed
as part of a binary install type build:</p>
<ul class="simple">
<li><code class="docutils literal"><span class="pre">openstack-dashboard</span></code></li>
<li><code class="docutils literal"><span class="pre">httpd</span></code></li>
<li><code class="docutils literal"><span class="pre">mod_wsgi</span></code></li>
<li><code class="docutils literal"><span class="pre">gettext</span></code></li>
</ul>
<p>To add a package to this list, say, <code class="docutils literal"><span class="pre">iproute</span></code>, first create a file, e.g.
<code class="docutils literal"><span class="pre">template-overrides.j2</span></code>. In this place the following:</p>
<div class="highlight-python"><div class="highlight"><pre><span></span>{% extends parent_template %}

# Horizon
{% set horizon_packages_append = [&#39;iproute&#39;] %}
</pre></div>
</div>
<p>Then rebuild the horizon image, passing the <code class="docutils literal"><span class="pre">--template-override</span></code> argument:</p>
<blockquote>
<div>kolla-build &#8211;template-override template-overrides.j2 horizon</div></blockquote>
<p>Alternatively <code class="docutils literal"><span class="pre">template_override</span></code> can be set in <code class="docutils literal"><span class="pre">kolla-build.conf</span></code>.</p>
<p>The <code class="docutils literal"><span class="pre">append</span></code> suffix in the above example carries special significance. It
indicates the operation taken on the package list. The following is a complete
list of operations available:</p>
<dl class="docutils">
<dt>override</dt>
<dd>Replace the default packages with a custom list.</dd>
<dt>append</dt>
<dd>Add a package to the default list.</dd>
<dt>remove</dt>
<dd>Remove a package from the default list.</dd>
</dl>
</div>
<div class="section" id="using-a-different-base-image">
<h3>Using a different base image<a class="headerlink" href="#using-a-different-base-image" title="Permalink to this headline">¶</a></h3>
<p>Base-image can be specified by argument <code class="docutils literal"><span class="pre">--base-image</span></code>. For example:</p>
<div class="highlight-python"><div class="highlight"><pre><span></span>kolla-build --base-image registry.access.redhat.com/rhel7/rhel --base rhel
</pre></div>
</div>
</div>
<div class="section" id="plugin-functionality">
<h3>Plugin Functionality<a class="headerlink" href="#plugin-functionality" title="Permalink to this headline">¶</a></h3>
<p>The Dockerfile customisation mechanism is also useful for adding/installing
plugins to services. An example of this is Neutron&#8217;s third party L2 <a class="reference external" href="https://wiki.openstack.org/wiki/Neutron#Plugins">drivers</a>.</p>
<p>The bottom of each Dockerfile contains two blocks, <code class="docutils literal"><span class="pre">image_name_footer</span></code>, and
<code class="docutils literal"><span class="pre">footer</span></code>. The <code class="docutils literal"><span class="pre">image_name_footer</span></code> is intended for image specific
modifications, while the <code class="docutils literal"><span class="pre">footer</span></code> can be used to apply a common set of
modifications to every Dockerfile.</p>
<p>For example, to add the <code class="docutils literal"><span class="pre">networking-cisco</span></code> plugin to the <code class="docutils literal"><span class="pre">neutron_server</span></code>
image, add the following to the <code class="docutils literal"><span class="pre">template-override</span></code> file:</p>
<div class="highlight-python"><div class="highlight"><pre><span></span>{% extends parent_template %}

{% block neutron_server_footer %}
RUN git clone https://git.openstack.org/openstack/networking-cisco \
    &amp;&amp; pip --no-cache-dir install networking-cisco
{% endblock %}
</pre></div>
</div>
<p>Acute readers may notice there is one problem with this however. Assuming
nothing else in the Dockerfile changes for a period of time, the above <code class="docutils literal"><span class="pre">RUN</span></code>
statement will be cached by Docker, meaning new commits added to the Git
repository may be missed on subsequent builds. To solve this the Kolla build
tool also supports cloning additional repositories at build time, which will be
automatically made available to the build, within an archive named
<code class="docutils literal"><span class="pre">plugins-archive</span></code>.</p>
<div class="admonition note">
<p class="first admonition-title">Note</p>
<p class="last">The following is available for source build types only.</p>
</div>
<p>To use this, add a section to <code class="docutils literal"><span class="pre">/etc/kolla/kolla-build.conf</span></code> in the following
format:</p>
<div class="highlight-python"><div class="highlight"><pre><span></span>[&lt;image&gt;-plugin-&lt;plugin-name&gt;]
</pre></div>
</div>
<p>Where <code class="docutils literal"><span class="pre">&lt;image&gt;</span></code> is the image that the plugin should be installed into, and
<code class="docutils literal"><span class="pre">&lt;plugin-name&gt;</span></code> is the chosen plugin identifier.</p>
<p>Continuing with the above example, add the following to
<code class="docutils literal"><span class="pre">/etc/kolla/kolla-build.conf</span></code>:</p>
<div class="highlight-python"><div class="highlight"><pre><span></span>[neutron-server-plugin-networking-cisco]
type = git
location = https://git.openstack.org/openstack/networking-cisco
reference = master
</pre></div>
</div>
<p>The build will clone the repository, resulting in the following archive
structure:</p>
<div class="highlight-python"><div class="highlight"><pre><span></span>plugins-archive.tar
|__ plugins
    |__networking-cisco
</pre></div>
</div>
<p>The template now becomes:</p>
<div class="highlight-python"><div class="highlight"><pre><span></span>{% block neutron_server_footer %}
ADD plugins-archive /
pip --no-cache-dir install /plugins/*
{% endblock %}
</pre></div>
</div>
</div>
<div class="section" id="custom-repos">
<h3>Custom Repos<a class="headerlink" href="#custom-repos" title="Permalink to this headline">¶</a></h3>
</div>
<div class="section" id="red-hat">
<h3>Red Hat<a class="headerlink" href="#red-hat" title="Permalink to this headline">¶</a></h3>
<p>The build method allows the operator to build containers from custom repos.
The repos are accepted as a list of comma separated values and can be in the
form of <code class="docutils literal"><span class="pre">.repo</span></code>, <code class="docutils literal"><span class="pre">.rpm</span></code>, or a url. See examples below.</p>
<p>Update <code class="docutils literal"><span class="pre">rpm_setup_config</span></code> in <code class="docutils literal"><span class="pre">/etc/kolla/kolla-build.conf</span></code>:</p>
<div class="highlight-python"><div class="highlight"><pre><span></span>rpm_setup_config = http://trunk.rdoproject.org/centos7/currrent/delorean.repo,http://trunk.rdoproject.org/centos7/delorean-deps.repo
</pre></div>
</div>
<p>If specifying a <code class="docutils literal"><span class="pre">.repo</span></code> file, each <code class="docutils literal"><span class="pre">.repo</span></code> file will need to exist in the
same directory as the base Dockerfile (<code class="docutils literal"><span class="pre">kolla/docker/base</span></code>):</p>
<div class="highlight-python"><div class="highlight"><pre><span></span><span class="n">rpm_setup_config</span> <span class="o">=</span> <span class="n">epel</span><span class="o">.</span><span class="n">repo</span><span class="p">,</span><span class="n">delorean</span><span class="o">.</span><span class="n">repo</span><span class="p">,</span><span class="n">delorean</span><span class="o">-</span><span class="n">deps</span><span class="o">.</span><span class="n">repo</span>
</pre></div>
</div>
</div>
<div class="section" id="ubuntu">
<h3>Ubuntu<a class="headerlink" href="#ubuntu" title="Permalink to this headline">¶</a></h3>
<p>For Debian based images, additional apt sources may be added to the build as
follows:</p>
<div class="highlight-python"><div class="highlight"><pre><span></span><span class="n">apt_sources_list</span> <span class="o">=</span> <span class="n">custom</span><span class="o">.</span><span class="n">list</span>
</pre></div>
</div>
</div>
</div>
<div class="section" id="known-issues">
<h2>Known issues<a class="headerlink" href="#known-issues" title="Permalink to this headline">¶</a></h2>
<ol class="arabic">
<li><p class="first">Can&#8217;t build base image because Docker fails to install systemd or httpd.</p>
<p>There are some issues between Docker and AUFS. The simple workaround to
avoid the issue is that add <code class="docutils literal"><span class="pre">-s</span> <span class="pre">devicemapper</span></code> or <code class="docutils literal"><span class="pre">-s</span> <span class="pre">btrfs</span></code> to
<code class="docutils literal"><span class="pre">DOCKER_OPTS</span></code>. Get more information about <a class="reference external" href="https://github.com/docker/docker/issues/6980">the issue from the Docker bug
tracker</a> and <a class="reference external" href="https://docs.docker.com/engine/userguide/storagedriver/btrfs-driver/#prerequisites">how to
configure Docker with BTRFS back end</a>.</p>
</li>
<li><p class="first">Mirrors are unreliable.</p>
<p>Some of the mirrors Kolla uses can be unreliable. As a result occasionally
some containers fail to build. To rectify build problems, the build tool
will automatically attempt three retries of a build operation if the first
one fails. The retry count is modified with the <code class="docutils literal"><span class="pre">--retries</span></code> option.</p>
</li>
</ol>
<div class="section" id="kolla-ansible-with-local-registry">
<h3>Kolla-ansible with Local Registry<a class="headerlink" href="#kolla-ansible-with-local-registry" title="Permalink to this headline">¶</a></h3>
<p>To make kolla-ansible pull images from a local registry, set
<code class="docutils literal"><span class="pre">&quot;docker_registry&quot;</span></code> to <code class="docutils literal"><span class="pre">&quot;172.22.2.81:5000&quot;</span></code> in
<code class="docutils literal"><span class="pre">&quot;/etc/kolla/globals.yml&quot;</span></code>. Make sure Docker is allowed to pull images from
insecure registry. See
<span class="xref std std-ref">Docker Insecure Registry Config</span>.</p>
</div>
<div class="section" id="building-behind-a-proxy">
<h3>Building behind a proxy<a class="headerlink" href="#building-behind-a-proxy" title="Permalink to this headline">¶</a></h3>
<p>We can insert http_proxy settings into the images to
fetch packages during build, and then unset them at the end to avoid having
them carry through to the environment of the final images. Note however, it&#8217;s
not possible to drop the info completely using this method; it will still be
visible in the layers of the image.</p>
<p>To set the proxy settings, we can add this to the template&#8217;s header block:</p>
<div class="highlight-python"><div class="highlight"><pre><span></span>ENV http_proxy=https://evil.corp.proxy:80
ENV https_proxy=https://evil.corp.proxy:80
</pre></div>
</div>
<p>To unset the proxy settings, we can add this to the template&#8217;s footer block:</p>
<div class="highlight-python"><div class="highlight"><pre><span></span>ENV http_proxy=&quot;&quot;
ENV https_proxy=&quot;&quot;
</pre></div>
</div>
<p>Besides this configuration options, the script will automatically read these
environment variables. If the host system proxy parameters match the ones
going to be used, no other input parameters will be needed. These are the
variables that will be picked up from the user env:</p>
<div class="highlight-python"><div class="highlight"><pre><span></span><span class="n">HTTP_PROXY</span><span class="p">,</span> <span class="n">http_proxy</span><span class="p">,</span> <span class="n">HTTPS_PROXY</span><span class="p">,</span> <span class="n">https_proxy</span><span class="p">,</span> <span class="n">FTP_PROXY</span><span class="p">,</span>
<span class="n">ftp_proxy</span><span class="p">,</span> <span class="n">NO_PROXY</span><span class="p">,</span> <span class="n">no_proxy</span>
</pre></div>
</div>
<p>Also these variables could be overwritten using <code class="docutils literal"><span class="pre">--build-args</span></code>, which have
precedence.</p>
</div>
</div>
</div>


          </div>
        </div>
      </div>
<div class="sphinxsidebar">
    <div class="sphinxsidebarwrapper">
            <h3><a href="index.html">Table Of Contents</a></h3>
            <ul>
<li><a class="reference internal" href="#">Building Container Images</a><ul>
<li><a class="reference internal" href="#generating-kolla-build-conf">Generating kolla-build.conf</a></li>
<li><a class="reference internal" href="#guide">Guide</a></li>
<li><a class="reference internal" href="#build-openstack-from-source">Build OpenStack from source</a></li>
<li><a class="reference internal" href="#dockerfile-customisation">Dockerfile Customisation</a><ul>
<li><a class="reference internal" href="#generic-customisation">Generic Customisation</a></li>
<li><a class="reference internal" href="#package-customisation">Package Customisation</a></li>
<li><a class="reference internal" href="#using-a-different-base-image">Using a different base image</a></li>
<li><a class="reference internal" href="#plugin-functionality">Plugin Functionality</a></li>
<li><a class="reference internal" href="#custom-repos">Custom Repos</a></li>
<li><a class="reference internal" href="#red-hat">Red Hat</a></li>
<li><a class="reference internal" href="#ubuntu">Ubuntu</a></li>
</ul>
</li>
<li><a class="reference internal" href="#known-issues">Known issues</a><ul>
<li><a class="reference internal" href="#kolla-ansible-with-local-registry">Kolla-ansible with Local Registry</a></li>
<li><a class="reference internal" href="#building-behind-a-proxy">Building behind a proxy</a></li>
</ul>
</li>
</ul>
</li>
</ul>

            <h4>Previous topic</h4>
            <p class="topless"><a href="index.html"
                                  title="previous chapter">Welcome to Kolla&#8217;s documentation!</a></p>
            <h4>Next topic</h4>
            <p class="topless"><a href="CONTRIBUTING.html"
                                  title="next chapter">How To Contribute</a></p>
            <h3>Project Source</h3>
            <ul class="this-page-menu">
              <li><a href="http://git.openstack.org/cgit/openstack/kolla
"
                     rel="nofollow">Project Source</a></li>
            </ul>
            <h3>This Page</h3>
            <ul class="this-page-menu">
              <li><a href="_sources/image-building.txt"
                     rel="nofollow">Show Source</a></li>
            </ul>
          <div id="searchbox" style="display: none">
            <h3>Quick search</h3>
              <form class="search" action="search.html" method="get">
                <input type="text" name="q" size="18" />
                <input type="submit" value="Go" />
                <input type="hidden" name="check_keywords" value="yes" />
                <input type="hidden" name="area" value="default" />
              </form>
              <p class="searchtip" style="font-size: 90%">
              Enter search terms or a module, class or function name.
              </p>
          </div>
          <script type="text/javascript">$('#searchbox').show(0);</script>
    </div>
</div>

      <div class="clearer"></div>
    </div>
    <div class="related" role="navigation" aria-label="related navigation">
      <h3>Navigation</h3>
      <ul>
        <li class="right" style="margin-right: 10px">
          <a href="genindex.html" title="General Index"
             accesskey="I">index</a></li>
        <li class="right" >
          <a href="CONTRIBUTING.html" title="How To Contribute"
             accesskey="N">next</a> |</li>
        <li class="right" >
          <a href="index.html" title="Welcome to Kolla’s documentation!"
             accesskey="P">previous</a> |</li>
        <li class="nav-item nav-item-0"><a href="index.html">kolla 4.0.0.0b4.dev66 documentation</a> &raquo;</li> 
      </ul>
    </div>

    <div class="footer" role="contentinfo">
        &copy; Copyright 2013, OpenStack Foundation.
      Created using <a href="http://sphinx-doc.org/">Sphinx</a> 1.3.6.
    </div>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript">
try {
//Tracking docs.openstack.org/developer/<projectname> only
//The URL is built from the project variable in conf.py
var pageTracker = _gat._getTracker("UA-17511903-1");
pageTracker._setCookiePath("/developer/kolla");
pageTracker._trackPageview();
} catch(err) {}</script>

  </body>
</html>